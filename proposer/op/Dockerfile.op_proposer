# Use a multi-stage build for efficiency
FROM golang:1.23 AS go-builder

# Set up Go environment
FROM go-builder AS optimism-builder
WORKDIR /optimism

# Cache go modules
COPY ./proposer/op/go.mod ./proposer/op/go.sum /optimism/op-proposer/
WORKDIR /optimism/op-proposer
RUN go mod download

# Build the application
COPY ./proposer/op /optimism/op-proposer
WORKDIR /optimism/op-proposer/proposer
RUN --mount=type=cache,target=/root/.cache/go-build \
    make op-proposer
RUN ls -l /optimism/op-proposer/proposer
RUN ls -l /optimism/op-proposer/proposer/bin
RUN pwd

# Use a slim Debian image for the final stage
FROM ubuntu:22.04

# Install necessary dependencies
RUN --mount=type=cache,target=/var/cache/apt \
    apt-get update && apt-get install -y \
    ca-certificates \
    sqlite3 \
    curl \
    jq \
    netcat-traditional \
    && rm -rf /var/lib/apt/lists/*

# Copy the built op-proposer binary from the previous stage
COPY --from=optimism-builder /optimism/op-proposer/proposer/bin/op-proposer /usr/local/bin/op-proposer

# Make the binary and entrypoint executable.
RUN ls -l /usr/local/bin/
RUN chmod +x /usr/local/bin/op-proposer

ENTRYPOINT ["/usr/local/bin/op-proposer"]